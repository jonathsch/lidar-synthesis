FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04

ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG http_proxy

RUN apt-get update && apt-get install --reinstall -y locales && locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US
ENV LC_ALL en_US.UTF-8

RUN apt-get update && apt-get install -y --no-install-recommends
RUN apt-get install -y build-essential
RUN apt-get install -y cmake
RUN apt-get install -y git
RUN apt-get install -y curl
RUN apt-get install -y vim
RUN apt-get install -y ca-certificates
RUN apt-get install -y libjpeg-dev
RUN apt-get install -y libpng16-16
RUN apt-get install -y libtiff5
RUN apt-get install -y libpng-dev
RUN apt-get install -y python-dev
RUN apt-get install -y python3.5
RUN apt-get install -y python3.5-dev
RUN apt-get install -y python-networkx
RUN apt-get install -y python-setuptools
RUN apt-get install -y python3-setuptools
RUN apt-get install -y python-pip
RUN apt-get install -y python3-pip
RUN pip install --upgrade pip==20.3.4
RUN rm -rf /var/lib/apt/lists/*         
         
          
         

RUN curl -fsSL -o- https://bootstrap.pypa.io/pip/3.5/get-pip.py | python3.5

# installing conda
RUN curl -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
     /opt/conda/bin/conda clean -ya && \
     /opt/conda/bin/conda create -n python37 python=3.7 numpy networkx scipy six requests


RUN packages='py_trees==0.8.3 shapely six dictor requests ephem tabulate' \
	&& python3.5 -m pip install ${packages}

WORKDIR /workspace
COPY .tmp/PythonAPI /workspace/CARLA/PythonAPI
ENV CARLA_ROOT /workspace/CARLA

ENV PATH "/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg":/opt/conda/envs/python37/bin:/opt/conda/envs/bin:$PATH

# adding CARLA egg to default python environment
RUN pip install --user setuptools py_trees==0.8.3 psutil shapely six dictor requests ephem tabulate

ENV SCENARIO_RUNNER_ROOT "/workspace/scenario_runner"
ENV LEADERBOARD_ROOT "/workspace/leaderboard"
ENV TEAM_CODE_ROOT "/workspace/team_code"
ENV PYTHONPATH "/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg":"${SCENARIO_RUNNER_ROOT}":"${CARLA_ROOT}/PythonAPI/carla":"${LEADERBOARD_ROOT}":${PYTHONPATH}

COPY .tmp/scenario_runner ${SCENARIO_RUNNER_ROOT}
COPY .tmp/leaderboard ${LEADERBOARD_ROOT}
COPY .tmp/team_code ${TEAM_CODE_ROOT}

RUN mkdir -p /workspace/results
RUN ls /workspace/leaderboard/scripts/
RUN chmod +x /workspace/leaderboard/scripts/run_evaluation.sh


########################################################################################################################
########################################################################################################################
############                                BEGINNING OF USER COMMANDS                                      ############
########################################################################################################################
########################################################################################################################

ENV PYTHONPATH "/workspace":${PYTHONPATH}

RUN apt-get update && apt-get install -y --no-install-recommends libgtk2.0-dev

RUN pip install -r /workspace/team_code/requirements.txt

RUN pip install torch-scatter -f https://data.pyg.org/whl/torch-1.11.0+cu102.html
RUN pip install mmcv-full==1.5.3 -f https://download.openmmlab.com/mmcv/dist/cu102/torch1.11.0/index.html
RUN pip install mmsegmentation==0.25.0
RUN pip install mmdet==2.25.0

ENV TEAM_AGENT ${TEAM_CODE_ROOT}/submission_agent.py
ENV TEAM_CONFIG ${TEAM_CODE_ROOT}/model_ckpt/transfuser
ENV CHALLENGE_TRACK_CODENAME SENSORS

########################################################################################################################
########################################################################################################################
############                                   END OF USER COMMANDS                                         ############
########################################################################################################################
########################################################################################################################

ENV SCENARIOS ${LEADERBOARD_ROOT}/data/all_towns_traffic_scenarios_public.json
ENV ROUTES ${LEADERBOARD_ROOT}/data/routes_100.xml
ENV REPETITIONS 1
ENV CHECKPOINT_ENDPOINT /workspace/results/results.json
ENV DEBUG_CHALLENGE 0

ENV HTTP_PROXY ""
ENV HTTPS_PROXY ""
ENV http_proxy ""
ENV https_proxy ""


CMD ["/bin/bash"]
